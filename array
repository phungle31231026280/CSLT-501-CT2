using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Linq;
using System.Net.Http.Headers;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApp2
{
    internal class FileName
    {
        static void Main(string[] args)
        {
            Random random = new Random();
            int[] randomNumbers = new int[5];
            for (int i = 0; i < 5; i++)
            { randomNumbers[i] = random.Next(1, 100); }


            Random random2 = new Random();
            int ranval = random2.Next(1, 100);
            bool exsit = Checkspeval(randomNumbers, ranval);


            int[,] arr = new int[3, 3];
            Random rnd = new Random();
            for (int i = 0; i < arr.GetLength(0); i++)
            {
                for (int j = 0; j < arr.GetLength(1); j++)
                {
                    arr[i, j] = rnd.Next(1, 100);
                }
            }


            while (true)
            {
                int sel = menu();
                switch (sel)
                {
                    case 0: Console.WriteLine("bye"); return;
                    case 1: Averagearr(randomNumbers); break;
                    case 2: Checkspeval(randomNumbers, ranval); break;
                    case 3: Maxminval(randomNumbers); break;
                    case 4: FindDuplicate(randomNumbers); break;
                    case 5: LowerTriangel(arr); break;
                    case 6: Determination(arr); break;
                    case 7: SmallestGap(randomNumbers); break;

                }

            }
        }
            static int menu()
            {
                Console.WriteLine("1 - Averagearr");
                Console.WriteLine("2 - Checkspeval");
                Console.WriteLine("3 - Maxminval");
                Console.WriteLine("4 - FindDuplicate");
                Console.WriteLine("5 - LowerTriangel");
                Console.WriteLine("6 - Determination");
                Console.WriteLine("7 - SmallestGap");
                Console.WriteLine("0 - Exit");
                int sel;
                while (true)
                {
                    bool c = int.TryParse(Console.ReadLine(), out sel);
                    if (c && sel >= 0 && sel <= 7)
                        break;
                    Console.WriteLine("Enter Number again");
                }
                return sel;

            }
            static void Averagearr(int[] a)
            {
                double sum = 0;
                foreach (int i in a)
                {
                    sum += i;
                }
                Console.WriteLine($"{sum / a.Length}"); ;
            }

            static bool Checkspeval(int[] a, int v)
            {
                foreach (int i in a)
                { if (i != v) return false; }
                return true;
            }

            static void Maxminval(int[] a)
            {
                int min = a[0];
                int max = a[0];
                foreach (int i in a)
                {
                    if (i < min) min = i;
                    if (i > max) max = i;
                }
                Console.WriteLine($"Max value: {max}");
                Console.WriteLine($"Min value: {min}");
            }

            static void FindDuplicate(int[] a)
            {
                Array.Sort(a);
            int i;
            int count = 0;
                for (i = 0; i < a.Length-1;i++)
                {
                if (a[i] == a[i + 1])
                    count++;
                }
               
            if (count != 0)
                Console.WriteLine($"Duplicate element is: {a[i]}  ");
            else
            Console.WriteLine("No duplitcate element");
            
            }

            static void LowerTriangel(int[,] a)
            {
                for (int i = 0; i < a.GetLength(0); i++)
                {
                    for (int j = 0; j < a.GetLength(1); j++)
                    {
                        if (i > j) a[i, j] = 0;          
                        Console.Write($"{a[i, j]}  ");
                    }
                    Console.WriteLine();
                }
            }

        static void Determination(int[,]a)
        {
            int det = 0;
            
            for (int i = 0; i < 3; i++)
            {
                det += (a[0, i] * (a[1, (i + 1) % 3] * a[2, (i + 2) % 3] - a[1, (i + 2) % 3] * a[2, (i + 1) % 3]));
            }

            Console.WriteLine(det) ;
        }

        static void SmallestGap(int[] a)
            {
                Array.Sort(a);

                int min = 0;
                int smallest = int.MaxValue;
                for (int i = 1; i < a.Length; i++)
                {
                    min = a[i] - a[i - 1];
                    if (min < smallest) smallest = min;
                }
                Console.WriteLine($"The smallest gap is: {smallest}");

            }
            
        }
    }



